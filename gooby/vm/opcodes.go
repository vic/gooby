package vm

func ExecuteOpcode(opcode int, vm *VM) {
	inst := opcodes[opcode]
	inst(vm)
}

var opcodes = []vm_instruction{
	vm_noop,
	vm_push_nil,
	vm_push_true,
	vm_push_false,
	vm_push_int,
	vm_push_self,
	vm_set_literal,
	vm_push_literal,
	vm_goto,
	vm_goto_if_false,
	vm_goto_if_true,
	vm_ret,
	vm_swap_stack,
	vm_dup_top,
	vm_dup_many,
	vm_pop,
	vm_pop_many,
	vm_rotate,
	vm_move_down,
	vm_set_local,
	vm_push_local,
	vm_push_local_depth,
	vm_set_local_depth,
	vm_passed_arg,
	vm_push_current_exception,
	vm_clear_exception,
	vm_push_exception_state,
	vm_restore_exception_state,
	vm_raise_exc,
	vm_setup_unwind,
	vm_pop_unwind,
	vm_raise_return,
	vm_ensure_return,
	vm_raise_break,
	vm_reraise,
	vm_make_array,
	vm_cast_array,
	vm_shift_array,
	vm_set_ivar,
	vm_push_ivar,
	vm_push_const,
	vm_set_const,
	vm_set_const_at,
	vm_find_const,
	vm_push_cpath_top,
	vm_push_const_fast,
	vm_find_const_fast,
	vm_set_call_flags,
	vm_allow_private,
	vm_send_method,
	vm_send_stack,
	vm_send_stack_with_block,
	vm_send_stack_with_splat,
	vm_send_super_stack_with_block,
	vm_send_super_stack_with_splat,
	vm_push_block,
	vm_passed_blockarg,
	vm_create_block,
	vm_cast_for_single_block_arg,
	vm_cast_for_multi_block_arg,
	vm_cast_for_splat_block_arg,
	vm_yield_stack,
	vm_yield_splat,
	vm_string_append,
	vm_string_build,
	vm_string_dup,
	vm_push_scope,
	vm_add_scope,
	vm_push_variables,
	vm_check_interrupts,
	vm_yield_debugger,
	vm_is_nil,
	vm_check_serial,
	vm_check_serial_private,
	vm_push_my_field,
	vm_store_my_field,
	vm_kind_of,
	vm_instance_of,
	vm_meta_push_neg_1,
	vm_meta_push_0,
	vm_meta_push_1,
	vm_meta_push_2,
	vm_meta_send_op_plus,
	vm_meta_send_op_minus,
	vm_meta_send_op_equal,
	vm_meta_send_op_lt,
	vm_meta_send_op_gt,
	vm_meta_send_op_tequal,
	vm_meta_send_call,
	vm_push_my_offset,
	vm_zsuper,
	vm_push_block_arg,
	vm_push_undef,
	vm_push_stack_local,
	vm_set_stack_local,
	vm_push_has_block,
	vm_push_proc,
	vm_check_frozen,
	vm_cast_multi_value,
	vm_invoke_primitive,
	vm_push_rubinius,
	vm_call_custom,
	vm_meta_to_s,
	vm_push_type,
	vm_push_mirror,
}
